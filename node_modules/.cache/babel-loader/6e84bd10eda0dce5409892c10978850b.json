{"ast":null,"code":"import { Howl } from 'howler';\nexport const paralelNumber = (value, dataLength) => {\n  if (value + 1 < dataLength) {\n    return value + 1;\n  } else {\n    return 0;\n  }\n};\nexport const getUrlParam = pa => {\n  let url = window.location.href.replace(/#+.*$/),\n      params = url.substring(url.indexOf('?') + 1, url.length).split('&'),\n      param = {};\n\n  for (let i = 0; i < params.length; i++) {\n    let pos = params[i].indexOf('='),\n        key = params[i].substring(0, pos),\n        val = params[i].substring(pos + 1);\n    param[key] = val;\n  }\n\n  return typeof param[pa] === 'undefined' ? false : param[pa];\n};\nexport const audio = (path, option) => {\n  const sound = new Howl({\n    src: [path],\n    ...option\n  });\n  return sound;\n};\nexport const initGA = (to, dataLog = 'wedding-invitation') => {\n  window.gtag('config', process.env.REACT_APP_GA, {\n    page_title: dataLog,\n    page_path: '/index.html',\n    to: to\n  });\n};\nexport const addGA = (event, status) => {\n  const report = {\n    event_label: status,\n    ts: parseInt(Date.parse(new Date()) / 1000)\n  };\n  window.gtag('event', event, report);\n};","map":{"version":3,"sources":["E:/Tools/download git/New folder/wedding-invitation/src/utils/helper.js"],"names":["Howl","paralelNumber","value","dataLength","getUrlParam","pa","url","window","location","href","replace","params","substring","indexOf","length","split","param","i","pos","key","val","audio","path","option","sound","src","initGA","to","dataLog","gtag","process","env","REACT_APP_GA","page_title","page_path","addGA","event","status","report","event_label","ts","parseInt","Date","parse"],"mappings":"AAAA,SAASA,IAAT,QAAqB,QAArB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAClD,MAAID,KAAK,GAAG,CAAR,GAAYC,UAAhB,EAA4B;AAC1B,WAAOD,KAAK,GAAG,CAAf;AACD,GAFD,MAEO;AACL,WAAO,CAAP;AACD;AACF,CANM;AAQP,OAAO,MAAME,WAAW,GAAIC,EAAD,IAAQ;AACjC,MAAIC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,OAA7B,CAAV;AAAA,MACEC,MAAM,GAAGL,GAAG,CAACM,SAAJ,CAAcN,GAAG,CAACO,OAAJ,CAAY,GAAZ,IAAmB,CAAjC,EAAoCP,GAAG,CAACQ,MAAxC,EAAgDC,KAAhD,CAAsD,GAAtD,CADX;AAAA,MAEEC,KAAK,GAAG,EAFV;;AAIA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,MAAM,CAACG,MAA3B,EAAmCG,CAAC,EAApC,EAAwC;AACtC,QAAIC,GAAG,GAAGP,MAAM,CAACM,CAAD,CAAN,CAAUJ,OAAV,CAAkB,GAAlB,CAAV;AAAA,QACEM,GAAG,GAAGR,MAAM,CAACM,CAAD,CAAN,CAAUL,SAAV,CAAoB,CAApB,EAAuBM,GAAvB,CADR;AAAA,QAEEE,GAAG,GAAGT,MAAM,CAACM,CAAD,CAAN,CAAUL,SAAV,CAAoBM,GAAG,GAAG,CAA1B,CAFR;AAIAF,IAAAA,KAAK,CAACG,GAAD,CAAL,GAAaC,GAAb;AACD;;AAED,SAAO,OAAOJ,KAAK,CAACX,EAAD,CAAZ,KAAqB,WAArB,GAAmC,KAAnC,GAA2CW,KAAK,CAACX,EAAD,CAAvD;AACD,CAdM;AAgBP,OAAO,MAAMgB,KAAK,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACrC,QAAMC,KAAK,GAAG,IAAIxB,IAAJ,CAAS;AACrByB,IAAAA,GAAG,EAAE,CAACH,IAAD,CADgB;AAErB,OAAGC;AAFkB,GAAT,CAAd;AAKA,SAAOC,KAAP;AACD,CAPM;AASP,OAAO,MAAME,MAAM,GAAG,CAACC,EAAD,EAAKC,OAAO,GAAG,oBAAf,KAAwC;AAC5DrB,EAAAA,MAAM,CAACsB,IAAP,CAAY,QAAZ,EAAsBC,OAAO,CAACC,GAAR,CAAYC,YAAlC,EAAgD;AAC9CC,IAAAA,UAAU,EAAEL,OADkC;AAE9CM,IAAAA,SAAS,EAAE,aAFmC;AAG9CP,IAAAA,EAAE,EAAEA;AAH0C,GAAhD;AAKD,CANM;AAQP,OAAO,MAAMQ,KAAK,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,QAAMC,MAAM,GAAG;AACbC,IAAAA,WAAW,EAAEF,MADA;AAEbG,IAAAA,EAAE,EAAEC,QAAQ,CAACC,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,IAAyB,IAA1B;AAFC,GAAf;AAIAnC,EAAAA,MAAM,CAACsB,IAAP,CAAY,OAAZ,EAAqBO,KAArB,EAA4BE,MAA5B;AACD,CANM","sourcesContent":["import { Howl } from 'howler';\r\n\r\nexport const paralelNumber = (value, dataLength) => {\r\n  if (value + 1 < dataLength) {\r\n    return value + 1;\r\n  } else {\r\n    return 0;\r\n  }\r\n};\r\n\r\nexport const getUrlParam = (pa) => {\r\n  let url = window.location.href.replace(/#+.*$/),\r\n    params = url.substring(url.indexOf('?') + 1, url.length).split('&'),\r\n    param = {};\r\n\r\n  for (let i = 0; i < params.length; i++) {\r\n    let pos = params[i].indexOf('='),\r\n      key = params[i].substring(0, pos),\r\n      val = params[i].substring(pos + 1);\r\n\r\n    param[key] = val;\r\n  }\r\n\r\n  return typeof param[pa] === 'undefined' ? false : param[pa];\r\n};\r\n\r\nexport const audio = (path, option) => {\r\n  const sound = new Howl({\r\n    src: [path],\r\n    ...option,\r\n  });\r\n\r\n  return sound;\r\n};\r\n\r\nexport const initGA = (to, dataLog = 'wedding-invitation') => {\r\n  window.gtag('config', process.env.REACT_APP_GA, {\r\n    page_title: dataLog,\r\n    page_path: '/index.html',\r\n    to: to,\r\n  });\r\n};\r\n\r\nexport const addGA = (event, status) => {\r\n  const report = {\r\n    event_label: status,\r\n    ts: parseInt(Date.parse(new Date()) / 1000),\r\n  };\r\n  window.gtag('event', event, report);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}